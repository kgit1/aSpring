<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Define your beans here -->

	<!-- Hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.localSessionFactoryBean">
		<!-- dataSource - connection to database -->
		<property name="dataSource" ref="dataSource" />
		<!-- when all annotated classes would be searched in one package we can 
			not point each class, but just show package to scan -->
		<property name="packagesToScan" value="b2.Spitter.SpringMVC" />
		<property name="hibernateProperties">
			<props>
				<!-- tells hibernate which dialect use to talk with database -->
				<prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- tells hibernate to show sql queries -->
				<prop key="show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- dataSource MySql connection -->
	<!-- we use dbcp BasicDataSource because it provides ability to use pool 
		of connections(c3p0 popular to) anlike as DriverManagerDataSource which just 
		create new connection every transaction -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql//localhost:3306/spitter" />
		<property name="user" value="root" />
		<property name="password" value="123456" />
	</bean>

	<!-- transactions for Hibernate -->
	<!-- transactionmanager default name for transaction managers, can be changed 
		if required, but better not -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- give session factory which will be wrapped by our transaction manager 
			to property "sessionFactory" -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- to add namespace tx to add transactions advices, add at the beginning 
		of xml -->
	<!-- xmlns:tx="http://www.springframework.org/schema/tx" -->
	<!-- transactional advice -->
	<!-- <tx:advice id="txAdvice"> -->
	<!-- tx advice requires transaction manager and will consume default "transactionalManager" 
		but if name differs - must be declared like <tx:advice id "txAdvice transactional-manager="nameOfTransactionalManagerHere"> -->
	<!-- attributes of advice -->
	<!--<tx:atributes> -->
	<!-- this attribute tells that on invoking method with name starts with 
		"add" must be inside transaction, if transaction exists - it will be used 
		for method, if not - new will be created and used for method -->
	<!--<tx:method name="add+" propagation="REQUIRED" /> -->
	<!-- this attribute tells that on invoking method with any name(template 
		for name -> "+") transaction not required, if transaction exists - it will 
		work inside, if not - will work without -->
	<!--<tx:method name="+" propagation="SUPPORTS" /> -->
	<!--</tx:atributes> -->
	<!--</tx:advice> -->


	<!-- <mvc:annotation-driven /> -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->

	<context:component-scan base-package="b2.Spitter.SpringMVC" />
</beans>
